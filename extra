// single product first grid:

<Grid container spacing={4} >
    {/* Product Images */}
    <Grid item xs={12} md={5} sx={{ border: '1px solid red', }}>
        <Box sx={{ position: 'relative', width: '100%', height: '100%' }}>
            {/* Main Image */}
            <Box sx={{
                width: '100%',
                height: { xs: '300px', md: '500px' },
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                mb: 2
            }}>
                <Box
                    component="img"
                    src={`${product.images[currentImageIndex]}?sw=600&sh=600`}
                    alt={product.name}
                    sx={{
                        maxWidth: '100%',
                        maxHeight: '100%',
                        objectFit: 'contain'
                    }}
                />
            </Box>

            {/* Navigation Arrows */}
            <IconButton
                onClick={handlePrevImage}
                sx={{
                    position: 'absolute',
                    left: 10,
                    top: '50%',
                    backgroundColor: 'rgba(70, 65, 65, 0.7)',
                    '&:hover': { backgroundColor: 'rgba(49, 44, 44, 0.9)' }
                }}
            >
                <ArrowBackIcon />
            </IconButton>
            <IconButton
                onClick={handleNextImage}
                sx={{
                    position: 'absolute',
                    right: 10,
                    top: '50%',
                    backgroundColor: 'rgba(70, 65, 65, 0.7)',
                    '&:hover': { backgroundColor: 'rgba(49, 44, 44, 0.9)' }
                }}
            >
                <ArrowForwardIcon />
            </IconButton>

            {/* Thumbnails */}
            <Box sx={{
                display: 'flex',
                overflowX: 'auto',
                gap: 1,
                py: 1
            }}>
                {product.images.map((img, index) => (
                    <Paper
                        key={index}
                        onClick={() => setCurrentImageIndex(index)}
                        elevation={index === currentImageIndex ? 3 : 1}
                        sx={{
                            minWidth: 60,
                            height: 60,
                            cursor: 'pointer',
                            border: index === currentImageIndex ? '2px solid' : 'none',
                            borderColor: index === currentImageIndex ? 'primary.main' : 'transparent',
                            overflow: 'hidden',
                            flexShrink: 0
                        }}
                    >
                        <img
                            src={`${img}?sw=60&sh=60`}
                            alt={`Product view ${index + 1}`}
                            style={{ width: '100%', height: '100%', objectFit: 'cover' }}
                        />
                    </Paper>
                ))}
            </Box>
        </Box>
    </Grid>

    {/* Product Details */}
    <Grid item xs={12} md={7} sx={{ border: '1px solid red', flexGrow: 1 }}>
        {/* Brand and Tag */}
        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2, maxWidth: '100%' }}>
            <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <Chip label={product.tag} color="primary" size="small" sx={{ mr: 1 }} />
                <Typography variant="subtitle1" color="text.secondary">
                    {product.brand}
                </Typography>
            </Box>
            <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <Rating value={product.rating} precision={0.5} size="small" readOnly />
                <Typography variant="caption" sx={{ ml: 0.5 }}>
                    ({product.reviews} reviews)
                </Typography>
            </Box>
        </Box>

        {/* Product Name */}
        <Typography variant="h4" component="h1" gutterBottom>
            {product.name}
        </Typography>

        {/* Product ID */}
        <Typography variant="body2" color="text.secondary" gutterBottom>
            Product ID: {product.id}
        </Typography>

        {/* Price */}
        <Box sx={{ my: 3 }}>
            <Typography variant="h5" component="span" sx={{ fontWeight: 'bold' }}>
                {formatPrice(product.price)}
            </Typography>
            <Typography variant="body2" component="span" sx={{ ml: 1, color: 'text.secondary' }}>
                Inclusive of all taxes
            </Typography>
        </Box>

        {/* Action Buttons */}
        <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>
            <Button
                variant="contained"
                color="primary"
                size="large"
                startIcon={<ShoppingCartIcon />}
                sx={{ flex: 1 }}
            >
                Add to Cart
            </Button>
            <Button
                variant="outlined"
                color="primary"
                size="large"
                startIcon={<CompareArrowsIcon />}
                sx={{ flex: 1 }}
            >
                Compare
            </Button>
        </Box>

        {/* Secondary Actions */}
        <Box sx={{ display: 'flex', justifyContent: 'space-around', mb: 3, maxWidth: '100%' }}>
            <IconButton onClick={() => setWishlisted(!wishlisted)}>
                {wishlisted ? <FavoriteIcon color="error" /> : <FavoriteBorderIcon />}
                <Typography variant="body2" sx={{ ml: 1 }}>
                    Wishlist
                </Typography>
            </IconButton>

            <IconButton onClick={() => setSimilarOpen(true)}>
                <Badge badgeContent={product.similarProducts.length} color="primary">
                    <CompareArrowsIcon />
                </Badge>
                <Typography variant="body2" sx={{ ml: 1 }}>
                    Similar
                </Typography>
            </IconButton>

            <IconButton onClick={() => setShareOpen(true)}>
                <ShareIcon />
                <Typography variant="body2" sx={{ ml: 1 }}>
                    Share
                </Typography>
            </IconButton>
        </Box>

        <Divider sx={{ my: 3 }} />

        {/* Delivery Check */}
        <Paper sx={{ p: 2, mb: 3, maxWidth: '100%' }}>
            <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <Avatar src="/delivery-icon.png" sx={{ mr: 2 }} />
                <Box sx={{ flexGrow: 1 }}>
                    <Typography variant="subtitle2">Check Delivery Availability</Typography>
                    <Typography variant="body2">Dispatch By 21 Jun, Saturday</Typography>
                    <Typography variant="caption">
                        If ordered within <span style={{ fontWeight: 'bold' }}>19 mins 20 secs</span>
                    </Typography>
                </Box>
                <ArrowForwardIcon />
            </Box>
        </Paper>

        {/* USPs */}
        <Box sx={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', mb: 3 }}>
            {product.usps.map((usp, index) => (
                <Box key={index} sx={{ textAlign: 'center', width: { xs: '50%', sm: '20%' }, mb: 2 }}>
                    <Avatar src={`/${usp.icon}-icon.png`} sx={{ width: 40, height: 40, mx: 'auto' }} />
                    <Typography variant="caption" sx={{ mt: 1, display: 'block' }}>
                        {usp.text}
                    </Typography>
                </Box>
            ))}
        </Box>

        {/* Offers */}
        <Box sx={{ mb: 3 }}>
            <Typography variant="h6" gutterBottom>
                Available Offers
            </Typography>

            {product.offers.map((offer, index) => (
                <Paper key={index} sx={{ p: 2, mb: 2 }}>
                    <Typography variant="body2" gutterBottom>
                        {offer.description}
                        <Button
                            size="small"
                            sx={{ ml: 1 }}
                            onClick={() => openTermsDialog(`Terms for ${offer.code}`, offer.terms)}
                        >
                            T&amp;C
                        </Button>
                    </Typography>
                    <Box sx={{ display: 'flex', alignItems: 'center' }}>
                        <Chip label={offer.code} sx={{ mr: 1 }} />
                        <Tooltip title={copiedCode === offer.code ? 'Copied!' : 'Copy code'}>
                            <IconButton size="small" onClick={() => copyToClipboard(offer.code)}>
                                {copiedCode === offer.code ? <CheckIcon color="success" /> : <CopyIcon />}
                            </IconButton>
                        </Tooltip>
                    </Box>
                </Paper>
            ))}

            <Button variant="text" endIcon={<ExpandMoreIcon />} sx={{ mt: 1 }}>
                +3 More Offers
            </Button>
        </Box>

        {/* Product Details Tabs */}
        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
            <Tabs value={tabValue} onChange={handleTabChange}>
                <Tab label="Description" />
                <Tab label="Specifications" />
                <Tab label="Reviews" />
            </Tabs>
        </Box>
        <Box sx={{ p: 2 }}>
            {tabValue === 0 && (
                <Typography>
                    This Police automatic watch features a self-winding mechanism with a brown dial and stainless steel strap.
                    The watch combines rugged style with precision engineering for a sophisticated look.
                </Typography>
            )}
            {tabValue === 1 && (
                <Accordion expanded={expanded === 'specs'} onChange={handleAccordionChange('specs')}>
                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>
                        <Typography>Product Specifications</Typography>
                    </AccordionSummary>
                    <AccordionDetails>
                        <Grid container spacing={2}>
                            {product.specs.map((spec, index) => (
                                <Grid item xs={6} key={index}>
                                    <Typography variant="subtitle2" color="text.secondary">
                                        {spec.name}
                                    </Typography>
                                    <Typography variant="body2">{spec.value}</Typography>
                                </Grid>
                            ))}
                        </Grid>
                    </AccordionDetails>
                </Accordion>
            )}
            {tabValue === 2 && (
                <Typography>No reviews yet. Be the first to review this product!</Typography>
            )}
        </Box>
    </Grid>
</Grid>


